function Snake.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
call Main.maxx 0
call MyMath.randInt 1
call Main.maxy 0
call MyMath.randInt 1
call Square.new 2
pop this 0
push this 0
pop this 1
call Main.maxx 0
call MyMath.randInt 1
pop this 2
push pointer 0
call Snake.show 1
pop temp 0
push pointer 0
return
function Snake.has 0
push argument 0
pop pointer 0
push pointer 0
push this 0
push argument 1
call Square.x 1
push argument 1
call Square.y 1
call Snake.hasFrom 4
return
function Snake.hasFrom 0
push argument 0
pop pointer 0
label WHILE_EXP0
push argument 1
push constant 0
eq
not
not
if-goto WHILE_END0
push argument 1
call Square.x 1
push argument 2
eq
push argument 1
call Square.y 1
push argument 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push argument 1
call Square.next 1
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.move 3
push argument 0
pop pointer 0
push this 0
call Square.x 1
pop local 0
push this 0
call Square.y 1
pop local 1
push this 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
sub
pop local 1
label IF_FALSE0
push this 2
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 1
add
pop local 1
label IF_FALSE1
push this 2
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 1
sub
pop local 0
label IF_FALSE2
push this 2
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 1
add
pop local 0
label IF_FALSE3
push local 0
push constant 0
lt
push local 1
push constant 0
lt
or
push local 0
call Main.maxx 0
push constant 1
sub
gt
or
push local 1
call Main.maxy 0
push constant 1
sub
gt
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
neg
return
label IF_FALSE4
push argument 1
call Square.x 1
push local 0
eq
push argument 1
call Square.y 1
push local 1
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 0
push argument 1
call Square.setPrev 2
pop temp 0
push argument 1
push this 0
call Square.setNext 2
pop temp 0
push argument 1
pop this 0
push argument 1
call Square.show 1
pop temp 0
push constant 1
return
label IF_FALSE5
push this 0
push this 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
push local 0
push local 1
call Square.setPosition 3
pop temp 0
push constant 2
return
label IF_FALSE6
push this 0
call Square.next 1
pop local 2
push pointer 0
push local 2
push local 0
push local 1
call Snake.hasFrom 4
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 1
call Square.prev 1
pop local 2
push local 2
push constant 0
call Square.setNext 2
pop temp 0
push this 1
push this 0
call Square.setNext 2
pop temp 0
push this 1
push constant 0
call Square.setPrev 2
pop temp 0
push this 0
push this 1
call Square.setPrev 2
pop temp 0
push this 1
push local 0
push local 1
call Square.setPosition 3
pop temp 0
push this 1
pop this 0
push local 2
pop this 1
push constant 2
return
label IF_FALSE7
push constant 1
neg
return
function Snake.setDirection 0
push argument 0
pop pointer 0
push argument 1
pop this 2
push constant 0
return
function Snake.dispose 0
push argument 0
pop pointer 0
push this 0
call Square.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Snake.paint 0
push argument 0
pop pointer 0
push constant 0
return
function Snake.show 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
not
call Snake.paint 2
pop temp 0
push constant 0
return
function Snake.hide 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Snake.paint 2
pop temp 0
push constant 0
return
