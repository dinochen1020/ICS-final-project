class PlantVSZombieGame
{
    field int height;
    field Array peas;
    field int peacount;
    field Array zombies;
    field int zombiecount;
    field Array sunflowers;
    field int sunflowercount;
    field Array peaarchers;
    field int peaarchercount;
    field Array icepeaarchers;
    field int icepeaarchercount;

    constructor PlantVSZombieGame new()
    {
        let height = 32;
        let peas = Array.new(10);
        let peacount = 0;
        let zombies = Array.new(5);
        let zombiecount = 0;
        let sunflowers = Array.new(5);
        let sunflowercount = 0;
        let peaarchers = Array.new(5);
        let peaarchercount = 0;
        let icepeaarchers = Array.new(5);
        let icepeaarchercount = 0;

        return this;
    }

    method void run()
    {
        var int plant_x;
        var int plant_y;
        var char key;
        var char lastkey;
        let plant_x = 1;
        do Map.Map();
        do createNewZomble(0);
        while (~(key = 81)) {
            if (lastkey = 83){
                if(~(key = 83)){
                do Screen.setColor(true);
                do Screen.drawRectangle(283,9,301,27);
                do Screen.setColor(false);
                do Screen.drawRectangle(286,12,301,16);
                do Screen.drawRectangle(283,19,298,24);
                do Output.moveCursor(4,35);
                do Output.printString("Where to plant?");
                let plant_x = Keyboard.readInt("");
                do Output.moveCursor(4,50);
                let plant_y = Keyboard.readInt("");
                do createNewsunFlower(plant_x,plant_y);
                }
            }
            if (lastkey = 80) {
                if(~(key = 80)){
                do Screen.setColor(true);
                do Screen.drawRectangle(283,9,301,27);
                do Screen.setColor(false);
                do Screen.drawRectangle(286,12,298,16);
                do Screen.drawRectangle(286,19,301,27);
                do Output.moveCursor(4,35);
                do Output.printString("Where to plant?");
                let plant_x = Keyboard.readInt("");
                do Output.moveCursor(4,50);
                let plant_y = Keyboard.readInt("");
                do createNewpeaArcher(plant_x,plant_y);
                }
            }
	        if (lastkey = 73){
                if(~(key = 73)){
                do Screen.setColor(true);
                do Screen.drawRectangle(283,9,301,27);
                do Screen.setColor(false);
                do Screen.drawRectangle(283,12,290,24);
                do Screen.drawRectangle(294,12,301,24);
                do Output.moveCursor(4,35);
                do Output.printString("Where to plant?");
                let plant_x = Keyboard.readInt("");
                do Output.moveCursor(4,50);
                let plant_y = Keyboard.readInt("");
                do createNewicepeaArcher(plant_x,plant_y);
                }
            }
            let lastkey = key;
            let key = Keyboard.keyPressed();
            do findGetHit();
            do draw();
            do createNewpea();
            do checkpea();
            do disposedeadzombies();
            do Sys.wait(10);
        }
        return;
    }
    
    method void createNewZomble(int y)
    {
        var Zombie zombie;
        let zombies[zombiecount] = Zombie.new(y);
        let zombiecount = zombiecount + 1;
        return;
    }
    
    method void createNewsunFlower(int x, int y)
    {
        var SunFlower sunflower;
        let sunflowers[sunflowercount] = SunFlower.new(x, y);
        let sunflowercount = sunflowercount + 1;
        return;
    }

    method void createNewicepeaArcher(int x, int y)
    {
        var IcePeaArcher icepeaarcher;
        let icepeaarchers[icepeaarchercount] = IcePeaArcher.new(x, y);
        let icepeaarchercount = icepeaarchercount + 1;
        return;
    }
    
    method void createNewpeaArcher(int x, int y)
    {
        var PeaArcher peaarcher;
        let peaarchers[peaarchercount] = PeaArcher.new(x, y);
        let peaarchercount = peaarchercount + 1;
        return;
    }

    method void createNewpea()
    {
        var Pea pea;
        var PeaArcher peaarcher;
        var IcePeaArcher icepeaarcher;
        var int i;
        let i = 0;
        while (i < peaarchercount) {
            let peaarcher = peaarchers[i];
            if (peaarcher.shoot()) {
                let peas[peacount] = Pea.new(peaarcher.GetXoffset() + 32, peaarcher.GetYoffset());
                let peacount = peacount + 1;
            }
            else {
                do peaarcher.addBulletFlag();
            }
            let i = i + 1;
        }
        let i = 0;
        while (i < icepeaarchercount) {
            let icepeaarcher = icepeaarchers[i];
            if (icepeaarcher.shoot()) {
                let peas[peacount] = Pea.new(icepeaarcher.GetXoffset() + 32, icepeaarcher.GetYoffset());
                let peacount = peacount + 1;
            }
            else {
                do icepeaarcher.addBulletFlag();
            }
            let i = i + 1;
        }
        return;
    }

    method void findGetHit()
    {
        var Zombie zombie;
        var Pea pea;
        var int i;
        var int j;
        let i = 0;
        let j = 0;
        while (i < peacount) {
            let pea = peas[i];
            while (j < zombiecount) {
                let zombie = zombies[j];
                if (GetHit(zombie, pea)) {
                    do zombie.GetHit();
                    do deletepea(i);
                    let peacount = peacount - 1;
                }
                let j = j + 1;
            }
            let i = i + 1;
        }
        return;
    }

    method boolean GetHit(Zombie zombie, Pea pea)
    {
        if (~(pea.GetYoffset() = zombie.GetYoffset())) {
            return false;
        }
        if (pea.GetXoffset() > (zombie.GetXoffset() - 20)) {
            return true;
        }

        return false;
    }

    method void shiftZombies()
    {
        var Zombie zombie;
        var int i;
        let i = 0;
        while (i < zombiecount) {
            let zombie = zombies[i];
            do zombie.Move();
            let i = i + 1;
        }
        return;
    }

    method void shiftpeas()
    {
        var Pea pea;
        var int i;
        let i = 0;
        while (i < peacount) {
            let pea = peas[i];
            do pea.Move();
            let i = i + 1;
        }
        return;
    }

    method void draw()
    {
        //do shiftZombies();
        do shiftpeas();
        return;
    }

    method void disposedeadzombies()
    {
        var Zombie zombie;
        var int i;
        let i = 0;
        while (i < zombiecount) {
            let zombie = zombies[i];
            if (zombie.Gethealth() = 0) {
                do deletezombie(i);
            }
            let i = i + 1;
        }
        return;
    }

    method void dispose()
    {
        var int i;
        var Zombie zombie;
        var PeaArcher peaarcher;
        var SunFlower sunflower;
        var Pea pea;
        let i = 0;
        while (i < zombiecount) {
            let zombie = zombies[zombiecount];
            do zombie.dispose();
            let i = i + 1;
        }
        let i = 0;
        while (i < peaarchercount) {
            let peaarcher = peaarchers[peaarchercount];
            do peaarcher.dispose();
            let i = i + 1;
        }
        let i = 0;
        while (i < sunflowercount) {
            let sunflower = sunflowers[sunflowercount];
            do sunflower.dispose();
            let i = i + 1;
        }
        let i = 0;
        while (i < peacount) {
            let pea = peas[peacount];
            do pea.dispose();
            let i = i + 1;
        }
        do Memory.deAlloc(this);

        return;
    }

    method void checkpea()
    {
        var Pea pea;
        var int i;
        let i = 0;
        if (peacount = 0) {
            return;
        }
        while (i < peacount) {
            let pea = peas[i];
            if (pea.GetXoffset() > 499) {
                do deletepea(i);
            }
            let i = i + 1;
        }
        return;
    }

    method void deletepea(int i)
    {
        var Pea pea;
        let pea = peas[i];
        do pea.erase();
        do pea.dispose();
        let peacount = peacount - 1;
        while (i < peacount) {
            let peas[i] = peas[i + 1];
            let i = i + 1;
        }
        
        return;
    }

    method void deletezombie(int i)
    {
        var Zombie zombie;
        let zombie = zombies[i];
        do zombie.EraseZombie();
        do zombie.dispose();
        let zombiecount = zombiecount - 1;
        while (i < zombiecount) {
            let zombies[i] = zombies[i + 1];
            let i = i + 1;
        }
        
        return;
    }
}